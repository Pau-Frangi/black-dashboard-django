# Generated by Django 4.2.9 on 2025-07-29 05:17

import apps.dyn_dt.mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado_en', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación del registro', verbose_name='Creado en')),
                ('modificado_en', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última modificación del registro', verbose_name='Modificado en')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del campamento')),
                ('creado_por', models.ForeignKey(blank=True, help_text='Usuario que creó este registro', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modificado_por', models.ForeignKey(blank=True, help_text='Usuario que modificó este registro', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modificado_por', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Campamento',
                'verbose_name_plural': 'Campamentos',
                'ordering': ['nombre'],
            },
            bases=(apps.dyn_dt.mixins.UserTrackingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Ejercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado_en', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación del registro', verbose_name='Creado en')),
                ('modificado_en', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última modificación del registro', verbose_name='Modificado en')),
                ('nombre', models.CharField(help_text="Ej: 'Ejercicio 2025'", max_length=100, unique=True, verbose_name='Nombre del ejercicio')),
                ('año', models.PositiveIntegerField(help_text='Año correspondiente a este ejercicio (ej. 2025)', verbose_name='Año')),
                ('activo', models.BooleanField(default=True, help_text='Marca si este ejercicio está actualmente en uso', verbose_name='¿Ejercicio activo?')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción adicional del ejercicio', null=True, verbose_name='Descripción')),
                ('creado_por', models.ForeignKey(blank=True, help_text='Usuario que creó este registro', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modificado_por', models.ForeignKey(blank=True, help_text='Usuario que modificó este registro', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modificado_por', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Ejercicio',
                'verbose_name_plural': 'Ejercicios',
                'ordering': ['-año'],
            },
            bases=(apps.dyn_dt.mixins.UserTrackingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HideShowFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.CharField(blank=True, max_length=255, null=True)),
                ('key', models.CharField(max_length=255)),
                ('value', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ModelFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.CharField(blank=True, max_length=255, null=True)),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PageItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.CharField(blank=True, max_length=255, null=True)),
                ('items_per_page', models.IntegerField(default=25)),
            ],
        ),
        migrations.CreateModel(
            name='Concepto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado_en', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación del registro', verbose_name='Creado en')),
                ('modificado_en', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última modificación del registro', verbose_name='Modificado en')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del concepto')),
                ('es_gasto', models.BooleanField(default=False, help_text='Marca si este concepto representa una salida de dinero', verbose_name='¿Es gasto?')),
                ('creado_por', models.ForeignKey(blank=True, help_text='Usuario que creó este registro', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modificado_por', models.ForeignKey(blank=True, help_text='Usuario que modificó este registro', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modificado_por', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Concepto',
                'verbose_name_plural': 'Conceptos',
                'ordering': ['nombre'],
            },
            bases=(apps.dyn_dt.mixins.UserTrackingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado_en', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación del registro', verbose_name='Creado en')),
                ('modificado_en', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última modificación del registro', verbose_name='Modificado en')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del turno')),
                ('campamento', models.ForeignKey(help_text='Campamento al que pertenece este turno', on_delete=django.db.models.deletion.CASCADE, related_name='turnos', to='dyn_dt.campamento', verbose_name='Campamento')),
                ('creado_por', models.ForeignKey(blank=True, help_text='Usuario que creó este registro', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('ejercicio', models.ForeignKey(help_text='Ejercicio al que pertenece este turno', on_delete=django.db.models.deletion.CASCADE, related_name='turnos', to='dyn_dt.ejercicio', verbose_name='Ejercicio')),
                ('modificado_por', models.ForeignKey(blank=True, help_text='Usuario que modificó este registro', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modificado_por', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Turno',
                'verbose_name_plural': 'Turnos',
                'ordering': ['ejercicio__nombre', 'nombre'],
                'unique_together': {('ejercicio', 'nombre')},
            },
            bases=(apps.dyn_dt.mixins.UserTrackingMixin, models.Model),
        ),
    ]
